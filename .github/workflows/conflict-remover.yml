name: Remove Conflict Label if Resolved
on:
  pull_request:
    types:
      - edited
      - synchronize
    branches:
      - master
permissions:
  contents: read
  pull-requests: write
jobs:
  remove-conflict-label:
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    steps:
      - name: Check and remove conflict label if resolved
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const labelName = "conflict";

            const RETRIES = 6;
            const DELAY_SECONDS = 10;

            async function delay(seconds) {
              return new Promise(resolve => setTimeout(resolve, seconds * 1000));
            }

            async function fetchPRWithRetry() {
              for (let attempt = 1; attempt <= RETRIES; attempt++) {
                const { data: pr } = await github.rest.pulls.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: prNumber,
                });

                if (pr.mergeable !== null) {
                  console.log(`[PR #${prNumber}] Mergeable status: ${pr.mergeable}`);
                  return pr;
                }

                console.log(`[PR #${prNumber}] Mergeable is null (Attempt ${attempt}/${RETRIES}). Retrying in ${DELAY_SECONDS}s...`);
                await delay(DELAY_SECONDS);
              }

              throw new Error(`[PR #${prNumber}] Mergeable status is still null after ${RETRIES} attempts.`);
            }

            console.log(`Checking for resolved conflicts on PR #${prNumber}`);

            const pr = await fetchPRWithRetry();

            if (pr.mergeable === true) {
              try {
                console.log(`[PR #${prNumber}] No conflicts detected. Attempting to remove label '${labelName}'...`);

                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  name: labelName,
                });

                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  body: "Merge conflicts have been resolved. Thank you!",
                });

                console.log(`[PR #${prNumber}] Conflict label removed and comment posted.`);
              } catch (error) {
                console.log(`[PR #${prNumber}] Conflict label was not present or already removed.`);
              }
            } else {
              console.log(`[PR #${prNumber}] Merge conflict still present. Label not removed.`);
            }

            console.log("Conflict check completed.");
